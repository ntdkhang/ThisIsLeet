#include <vector>
#include <map>

class Solution {
public:
    std::vector<std::vector<int>> threeSum(std::vector<int>& nums) {
        std::vector<std::vector<int>> result;
        std::map<int, int> count;

        for (std::vector<int>::iterator it = nums.begin(); it != nums.end(); it++) {
            count[*it]++;
        }

        for (std::map<int, int>::iterator firstNum = count.begin(); firstNum != count.end(); firstNum++) {
            // decrement count of the first number;
            firstNum->second--;
            for (std::map<int, int>::iterator secondNum = firstNum; secondNum != count.end(); secondNum++) {
                if (secondNum->second > 0) {
                    secondNum->second--;
                    int thirdNum = -(firstNum->first + secondNum->first);
                    if (count[thirdNum] > 0) {
                        result.push_back(std::vector<int>{firstNum->first, secondNum->second, thirdNum});
                    }
                    secondNum->second++;
                }
            }

            // increment count of first
            firstNum->second++;
        }

        return result;
    }
};
